@model IEnumerable<ECommerceMvcSite.Models.Order>

@{
    ViewBag.Title = "Siparişlerim";
    var activeTab = Request.QueryString["tab"] ?? "hazirlaniyor";

    // ✅ Sipariş durumlarına göre filtreleme — düzeltildi
    var filteredOrders = activeTab switch
    {
        "onaylanan" => Model.Where(o => o.Status == "Sipariş Onaylandı" && !o.IsCancelled).ToList(),
        "iptal" => Model.Where(o => o.IsCancelled).ToList(),
        _ => Model.Where(o => o.Status == "Hazırlanıyor" && !o.IsCancelled).ToList()
    };
}

<h2>Siparişlerim</h2>

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link @(activeTab == "hazirlaniyor" ? "active" : "")" href="?tab=hazirlaniyor">Alınan Siparişlerim</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab == "onaylanan" ? "active" : "")" href="?tab=onaylanan">Onaylanan Siparişlerim</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab == "iptal" ? "active" : "")" href="?tab=iptal">İptal Edilen Siparişlerim</a>
    </li>
</ul>

@if (!filteredOrders.Any())
{
    <div class="alert alert-info">
        Bu sekmede gösterilecek sipariş bulunmamaktadır.
    </div>
}
else
{
    foreach (var order in filteredOrders)
    {
        <div class="card mb-4">
            <div class="card-header">
                <strong>Sipariş Tarihi:</strong> @order.OrderDate.ToString("dd.MM.yyyy HH:mm")<br />
                <strong>Durum:</strong> @(order.IsCancelled ? "İptal Edildi" : order.Status)
            </div>
            <div class="card-body">
                <ul class="list-group mb-2">
                    @foreach (var item in order.Items)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <img src="@Url.Content(item.Product.ImageUrl)" alt="@item.Product.Name" width="80" height="80" class="me-3" />
                            <div>
                                <strong>@item.Product.Name</strong><br />
                                @item.Quantity adet - @item.Product.Price ₺
                            </div>
                        </li>
                    }
                </ul>
                <p><strong>Toplam Tutar:</strong> @order.Items.Sum(i => i.Quantity * i.Product.Price) ₺</p>

                @if (!order.IsCancelled && order.Status == "Hazırlanıyor")
                {
                    using (Html.BeginForm("IptalEt", "Order", FormMethod.Post, new { onsubmit = "return confirm('Bu siparişi iptal etmek istediğinizden emin misiniz?');" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("orderId", order.Id)
                        <button type="submit" class="btn btn-danger btn-sm">İptal Et</button>
                    }
                }
            </div>
        </div>
    }
}
