@model ECommerceMvcSite.Models.Product
@{
    ViewBag.Title = "Ürün Detayı";
}

<div class="product-detail-card">
    <img src="@Url.Content(Model.ImageUrl ?? "~/Images/default.png")"
         alt="@Model.Name" class="detail-image" />

    <div class="detail-content">
        <h2>@Model.Name</h2>
        <p class="price">@Model.Price.ToString("N2") ₺</p>
        <p class="stock">Stok: @Model.Stock</p>
        <p class="description">@Model.Description</p>

        <form action="@Url.Action("AddToCart", "Cart")" method="post">
            @Html.AntiForgeryToken()
            @Html.Hidden("productId", Model.Id)
            <button type="submit" class="btn-primary">Sepete Ekle</button>
        </form>
    </div>
</div>

<style>
    .product-detail-card {
        display: flex;
        gap: 40px;
        padding: 30px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        max-width: 1000px;
        margin: 0 auto;
    }

    .detail-image {
        width: 350px;
        height: 350px;
        object-fit: contain;
        border-radius: 12px;
        border: 1px solid #eee;
    }

    .detail-content {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
    }

    .price {
        color: green;
        font-size: 24px;
        font-weight: bold;
    }

    .stock {
        color: #555;
        margin-bottom: 10px;
    }

    .description {
        margin-top: 10px;
        margin-bottom: 20px;
        color: #333;
        white-space: pre-line;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 16px;
        border-radius: 6px;
        cursor: pointer;
        width: fit-content;
        text-decoration: none;
        display: inline-block;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .slider-container {
        position: relative;
        overflow: hidden;
        margin: 40px auto;
        max-width: 1100px;
    }

    .slider-wrapper {
        display: flex;
        transition: transform 0.4s ease-in-out;
        gap: 20px;
        overflow-x: auto;
        scroll-behavior: smooth;
        padding-bottom: 10px;
    }

    .slider-item {
        flex: 0 0 auto;
        width: 220px;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 10px;
        background-color: #fff;
        text-align: center;
    }

        .slider-item img {
            width: 100%;
            height: 150px;
            object-fit: contain;
            border-radius: 8px;
        }

    .slider-btn {
        position: absolute;
        top: 40%;
        transform: translateY(-50%);
        font-size: 24px;
        background-color: rgba(0,0,0,0.3);
        color: white;
        border: none;
        cursor: pointer;
        padding: 10px;
        z-index: 1;
        border-radius: 50%;
    }

        .slider-btn.prev {
            left: 10px;
        }

        .slider-btn.next {
            right: 10px;
        }
</style>

@if (ViewBag.RelatedProducts != null && ((List<ECommerceMvcSite.Models.Product>)ViewBag.RelatedProducts).Any())
{
    <hr />
    <h3 style="text-align:left;">Benzer Ürünler</h3>

    <div class="slider-container">
        <button class="slider-btn prev">&#10094;</button>

        <div class="slider-wrapper">
            @foreach (var item in (List<ECommerceMvcSite.Models.Product>)ViewBag.RelatedProducts)
            {
                <div class="slider-item">
                    <img src="@Url.Content(item.ImageUrl ?? "~/Images/default.png")" />
                    <h5>@item.Name</h5>
                    <p class="price">@item.Price.ToString("N2") ₺</p>
                    <a href="@Url.Action("Details", "Products", new { id = item.Id })" class="btn-primary">İncele</a>
                </div>
            }
        </div>

        <button class="slider-btn next">&#10095;</button>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const wrapper = document.querySelector('.slider-wrapper');
        const nextBtn = document.querySelector('.slider-btn.next');
        const prevBtn = document.querySelector('.slider-btn.prev');

        const scrollStep = 240;

        nextBtn.addEventListener('click', () => {
            wrapper.scrollBy({ left: scrollStep, behavior: 'smooth' });
        });

        prevBtn.addEventListener('click', () => {
            wrapper.scrollBy({ left: -scrollStep, behavior: 'smooth' });
        });
    });
</script>